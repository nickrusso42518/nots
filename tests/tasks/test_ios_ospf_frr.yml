---
- name: "Store IOS OSPF FRR text"
  set_fact:
    junk: "dummy text"
    text: |-
      OSPF Router with ID (10.0.0.2) (Process ID 1)
      Microloop avoidance is enabled for protected prefixes, delay 5000 msec
      Loop-free Fast Reroute protected prefixes
      Area  Topology name   Priority   Remote LFA Enabled  TI-LFA Enabled
         0           Base       High                  Yes              No
        51            FUN        Low                   No              No

- name: "Perform parsing"
  set_fact:
    data: "{{ text | ios_ospf_frr }}"

- name: "Print structured data"
  debug:
    var: "data"

- name: "Ensure parsing succeeded for area 0"
  assert:
    that:
      - "data.keys() | length == 2"
      - "data.area0.id == 0"
      - "data.area0.pref_pri == 'high'"
      - "data.area0.rlfa"
      - "not data.area0.tilfa"
      - "data.area0.topology == 'base'"
    msg: "parsing problem. check JSON dump from previous task"

- name: "Ensure parsing succeeded for area 51"
  assert:
    that:
      - "data.area51.id == 51"
      - "data.area51.pref_pri == 'low'"
      - "not data.area51.rlfa"
      - "not data.area51.tilfa"
      - "data.area51.topology == 'fun'"
    msg: "parsing problem. check JSON dump from previous task"

- name: "Perform parsing of junk input"
  set_fact:
    empty: "{{ junk | ios_ospf_frr }}"

- name: "Print empty data"
  debug:
    var: "empty"

- name: "Ensure parsing results in an empty dict"
  assert:
    that: "empty | length == 0"
...
