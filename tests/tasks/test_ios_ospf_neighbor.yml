---
- name: "Store IOS OSPF neighbor text"
  set_fact:
    junk: "dummy text"
    text: |-
      Neighbor ID  Pri   State         Dead Time  Address        Interface
      10.108.23.50   0   FULL/  -      00:00:35   10.125.95.7    GigabitEth0/1
      10.108.5.50  255   FULL/DR       00:00:34   10.125.95.137  Port-chan8.33
      10.255.6.50   23   2WAY/DROTHER  11:22:33   10.108.0.0     NVE8
      10.0.0.11      0   FULL/  -        -        10.0.0.11      OSPF_VL0

- name: "Perform parsing"
  set_fact:
    data: "{{ text | ios_ospf_neighbor }}"

- name: "Print structured data"
  debug:
    var: "data"

- name: "Ensure parsing succeeded for first neighbor"
  assert:
    that:
      - "data | length == 4"
      - "data[0].rid == '10.108.23.50'"
      - "data[0].priority == 0"
      - "data[0].state == 'full'"
      - "data[0].role == '-'"
      - "data[0].deadtime == '00:00:35'"
      - "data[0].deadtime_sec == 35"
      - "data[0].peer == '10.125.95.7'"
      - "data[0].intf == 'gigabiteth0/1'"

- name: "Ensure parsing succeeded for second neighbor"
  assert:
    that:
      - "data[1].rid == '10.108.5.50'"
      - "data[1].priority == 255"
      - "data[1].state == 'full'"
      - "data[1].role == 'dr'"
      - "data[1].deadtime == '00:00:34'"
      - "data[1].deadtime_sec == 34"
      - "data[1].peer == '10.125.95.137'"
      - "data[1].intf == 'port-chan8.33'"

- name: "Ensure parsing succeeded for third neighbor"
  assert:
    that:
      - "data[2].rid == '10.255.6.50'"
      - "data[2].priority == 23"
      - "data[2].state == '2way'"
      - "data[2].role == 'drother'"
      - "data[2].deadtime == '11:22:33'"
      - "data[2].deadtime_sec == 40953"
      - "data[2].peer == '10.108.0.0'"
      - "data[2].intf == 'nve8'"

- name: "Ensure parsing succeeded for fourth neighbor (VL)"
  assert:
    that:
      - "data[3].rid == '10.0.0.11'"
      - "data[3].priority == 0"
      - "data[3].state == 'full'"
      - "data[3].role == '-'"
      - "data[3].deadtime == '-'"
      - "data[3].deadtime_sec == 0"
      - "data[3].peer == '10.0.0.11'"
      - "data[3].intf == 'ospf_vl0'"

- name: "Perform parsing of junk input"
  set_fact:
    empty: "{{ junk | ios_ospf_neighbor }}"

- name: "Print empty data"
  debug:
    var: "empty"

- name: "Ensure parsing results in an empty list"
  assert:
    that: "empty | length == 0"
...
